(function() {var implementors = {};
implementors["libil2cpp"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"libil2cpp/trait.Type.html\" title=\"trait libil2cpp::Type\">Type</a>&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.138/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libil2cpp/struct.Il2CppArray.html\" title=\"struct libil2cpp::Il2CppArray\">Il2CppArray</a>&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;for&lt;'a&gt; T::<a class=\"associatedtype\" href=\"libil2cpp/trait.Type.html#associatedtype.Held\" title=\"type libil2cpp::Type::Held\">Held</a>&lt;'a&gt;: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.138/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,&nbsp;</span>","synthetic":false,"types":["libil2cpp::array::Il2CppArray"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.138/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"libil2cpp/struct.Il2CppString.html\" title=\"struct libil2cpp::Il2CppString\">Il2CppString</a>","synthetic":false,"types":["libil2cpp::string::Il2CppString"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()