name: Tests
on: [push, pull_request]

jobs:
  tests:
    name: Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        unity: [unity2019, unity2018]
        os: [windows-latest, ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: clippy, rustfmt

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/
            target/
          key: tests-${{ matrix.os }}-${{ matrix.unity }}-${{ hashFiles('**/Cargo.toml') }}

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace --features=${{ matrix.unity }} -- --skip bindgen

      - name: Check for clippy warnings
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --workspace --examples --tests --features=${{ matrix.unity }} -- -D warnings

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  tests-android:
    name: Android Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        unity: [unity2019, unity2018]
        arch: [armv8, armv7]
        include:
          - arch: armv8
            rust-target: aarch64-linux-android
            ndk-target: arm64-v8a
          - arch: armv7
            rust-target: armv7-linux-androideabi
            ndk-target: armeabi-v7a

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.rust-target }}
          profile: minimal
          override: true
          components: clippy, rustfmt
      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r22

      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/
            target/
          key: tests-android-${{ matrix.arch }}-${{ matrix.unity }}-${{ hashFiles('**/Cargo.toml') }}

      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-ndk

      - name: Check for clippy warnings
        uses: actions-rs/cargo@v1
        with:
          command: ndk
          args: --target=${{ matrix.ndk-target }} --platform=24 clippy --workspace --examples --features=${{ matrix.unity }}
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
